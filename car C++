#include <iostream>
#include <string>
#include <vector>
// Define basic car components as classes
class Engine {
public:
std::string type;
int horsepower;
 Engine(std::string t, int hp) : type(t), horsepower(hp) {}
void start() {
std::cout << "Engine (" << type << ") started. Vroom vroom!\n";
  }
};
class Wheel {
public:
std::string tireType;
int diameter;
Wheel(std::string tt, int d) : tireType(tt), diameter(d) {}
};
class Body {
public:
std::string style;
std::string color;
Body(std::string s, std::string c) : style(s), color(c) {}
};
class Car {
public:
std::string model;
Engine engine;
std::vector<Wheel> wheels;
Body body;
Car(std::string m, Engine e, std::vector<Wheel> w, Body b)
 : model(m), engine(e), wheels(w), body(b) {}
void drive() {
std::cout << "The " << body.color << " " << model << " is driving.\n";
engine.start();
}
void displayDetails() const {
std::cout << "\nCar Details:\n";
std::cout << "Model: " << model << "\n";
        std::cout << "Body Style: " << body.style << ", Color: " << body.color << "\n";
        std::cout << "Engine Type: " << engine.type << ", Horsepower: " << engine.horsepower << "\n";
        std::cout << "Wheels:\n";
        for (const auto& wheel : wheels) {
            std::cout << "- Type: " << wheel.tireType << ", Diameter: " << wheel.diameter << " inches\n";
        }
    }
};

int main() {
    // Create an engine
    Engine myEngine("Gasoline", 200);

    // Create wheels
    std::vector<Wheel> myWheels;
    for (int i = 0; i < 4; ++i) {
        myWheels.emplace_back("All-Season", 17);
    }

    // Create a car body
    Body myBody("Sedan", "Silver");

    // Build the car
    Car myCar("Generic Sedan", myEngine, myWheels, myBody);

    // Interact with the car
    myCar.displayDetails();
    myCar.drive();

    std::cout << "\nLet's build another car!\n";

    // Create components for a sports car
    Engine sportsEngine("V6", 350);
    std::vector<Wheel> sportsWheels;
    for (int i = 0; i < 4; ++i) {
        sportsWheels.emplace_back("Performance", 19);
    }
    Body sportsBody("Coupe", "Red");

    // Build the sports car
    Car sportsCar("Speedster X", sportsEngine, sportsWheels, sportsBody);

    sportsCar.displayDetails();
    sportsCar.drive();

    return 0;
}
